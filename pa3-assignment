COMP4115
Spring 2015
Programming Assignment 3
Assigned: 31 March, 2015
Deadline: 7 April, 2015

This assignment is due on April 7, before class begins.

You will submit it via github as usual. Since this is the third github
assignment and you're all comfortable with the tool, we won't accept
ANY late submissions. If you anticipate any questions or issues with
github itself, let me or Muktadir know right before the due date.

Note that stored procedures and user-defined functions in mySQL can be
tricky to get working (just like setting up the program for the first
assignment!). Even for simple ones like the first two below, it will
take you a little trial and error to get it working, so allow time for
experimentation.

We'll cover more in the next class, but that won't be until thursday
4/2/15. In the meantime, here's a quick summary of some useful
information for this assignment:




###########################################################
#
# PART ONE: 10 points
#
##########################################################

Create a simple mySQL procedure using only the SQL command line interface.

Function name: exp
Parameters: two integers
Returns: an int, the result of multiplying the two parameters together


Because you're doing this one on the command line, all you'll need to
submit is a plaintext file showing (1) the sql commands you executed
to create the function, (2) the sql command to invoke the function,
and (3) the result you saw.

For example, if you were to submit a function like the "hello world" we did in class, you would submit a text file with the following lines:

mysql> create function hw( ) returns varchar(20)  
mysql> return( 'hello world!' );
Query OK, 0 rows affected (0.03 sec)

mysql> select hw();
+--------------+
| hw()         |
+--------------+
| hello world! |
+--------------+
1 row in set (0.01 sec)


###########################################################
#
# PART TWO: 20 points
#
##########################################################


Write a SQL user-defined function that calculates the area of a
circle, given its radius.

In SQL, user-defined functions are written in C/C++. I'm assuming you
have some familiarity with at least one of these languages, and that
you have a C/C++ compiler on your machine. If I'm wrong about either
assumption, please post a question on piazza or swing by my office or
see Muktadir anytime -- we can help you get set-up.

Function input: double, the radius
Return value: double, the circle's area

Here's how you get it to work:

* Write a small C/C++ program to implement the function as
  described. For the rest of this instruction, I'll assume your file
  is named radius.cpp.

* Compile your program and output the accompanying *.so file, like this: 
gcc -shared -o radius.so radius.cpp

* Move the radius.so file to the mysql lib file with other stored
  procedures. Usually this would be in /usr/local/mysql/lib/plugin.
  You can always verify by firing up mysql and running the command
  show variables like 'mysql> plugin_dir';

* Now fire up mysql and you should be able to invoke the function with
  a select statement.

Submission:

* Submit to github your .cpp file containing your function

* In your README file, include at least 4 inputs you've tested in calling your function, and the results you saw.

###########################################################
#
# PART THREE: 70 points
#
##########################################################

For the rest of this assignment, you'll write SQL stored procedures to read and
maniuplate data from the mySQL employees database (remember it? You
can get it here: https://dev.mysql.com/doc/employee/en/ )

* Write a function that returns the first and last name of all
  employees that match a given argument. For example, if I invoke the
  function with the argument "Bouloucos", it should return Chenye
  Bouloucos, Kristinn Bouloucos, Otmar Bouloucos, etc. (there are
  nearly 200 of them).

* Write a function that returns the average salary of all employees
  who work in a given department (with department specified by its ID
  number, in the argument to the function).

* Write a function that takes one argument ('M' or 'F') and returns
  how many employees exist of the given gender.
